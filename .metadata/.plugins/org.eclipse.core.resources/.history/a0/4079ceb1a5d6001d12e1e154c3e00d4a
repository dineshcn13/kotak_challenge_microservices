package com.test.kotak.cherry.company.service;

import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.test.kotak.cherry.company.controller.EmployeeServiceProxy;
import com.test.kotak.cherry.company.entity.Company;
import com.test.kotak.cherry.company.repository.CompanyRepository;
import com.test.kotak.cherry.company.responsedata.Employee;
import com.test.kotak.cherry.company.responsedata.ResponseData;

@Service
@Slf4j
public class CompanyService {

    @Autowired
    private CompanyRepository companyRepository;
    
    @Autowired
    private EmployeeServiceProxy employeeServiceProxy;

    public Company saveCompany(Company company) {
        log.info("Inside saveCompany of CompanyService");
        return companyRepository.save(company);
    }

    public Company findCompanyByCompanyId(Long companyId) {
        log.info("Inside findDepartmentById of CompanyService");
        return companyRepository.findCompanyByCompanyId(companyId);
    }

	public String deleteCompanyByCompanyId(Long companyId) {
		log.info("Inside deleteCompanyByCompanyId of CompanyService");
		companyRepository.deleteById(companyId);
		return "Deleted Successfully!";
	}

	public Company updateCompanyByCompanyId(Company company) {
		log.info("Inside updateDepartmentById of CompanyService");
		return companyRepository.save(company);
	}
	
	 public ResponseData getEmployeeWithCompany(Long companyId) {
	        log.info("Inside getEmployeeWithCompany of CompanyService");
	        ResponseData responseData = new ResponseData();
	        Company company = companyRepository.findCompanyByCompanyId(companyId);
	        
	        log.info("Inside employeeServiceProxy of CompanyService");
	        Employee employee = employeeServiceProxy.findEmployeeByCompanyId(company.getCompanyId());

	        responseData.setEmployee(employee);
	        responseData.setCompany(company);

	        return  responseData;
	    }
}
